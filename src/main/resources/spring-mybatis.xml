<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:websocket="http://www.springframework.org/schema/websocket" 
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/tx 
                        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd  
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/websocket
                        http://www.springframework.org/schema/websocket/spring-websocket.xsd"> 
                        
                        
	<!-- 这个文件就是用来完成spring和mybatis的整合的。这里面也没多少行配置，主要的就是自动扫描，自动注入，配置数据库     -->    
	<description>Spring公共配置 </description>
	
	<!-- 初始化时执行发布webservice -->
	<!-- <bean id="publish" class="com.yonyou.component.webservice.WebServicePublish" init-method="publishWebservice"></bean> -->
	
    <!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.yonyou">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
     
    <!-- 引入配置文件 -->  
    <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:application.properties" />  
    </bean> 
   
    
    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">  
	  <property name="driverClassName" value="${jdbc.driver}" />  
	  <property name="url" value="${jdbc.url}" />  
	  <property name="username" value="${jdbc.username}" />  
	  <property name="password" value="${jdbc.password}" />  
	  <!-- 初始化连接大小 -->  
       <property name="initialSize" value="${jdbc.initialSize}"></property>  
       <!-- 连接池最大数量 -->  
       <property name="maxActive" value="${jdbc.maxActive}"></property>  
       <!-- 连接池最大空闲 -->  
       <property name="maxIdle" value="${jdbc.maxIdle}"></property>  
       <!-- 连接池最小空闲 -->  
       <property name="minIdle" value="${jdbc.minIdle}"></property>  
       <!-- 获取连接最大等待时间 -->  
       <property name="maxWait" value="${jdbc.maxWait}"></property>  
	</bean>  
    
  
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:com/yonyou/mapping/*.xml"></property>  
    </bean>  
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.yonyou.repository" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
  
  
  	<!-- 配置JdbcTemplate -->
  	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
  		<property name="dataSource" ref="dataSource"></property>
  	</bean>
  
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean> 
    <!-- 启用事务管理 -->
    <tx:annotation-driven transaction-manager="transactionManager" />
   
</beans>  